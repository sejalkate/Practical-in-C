#include <stdio.h>

void enqueue();
void dequeue();
void show();

int cirQueue[10];
int rear=-1,front=-1,i;

void main()
{
    printf("Circular queue using array...!");
    int choice;
    do
    {
        printf("\nMenu...................");
        printf("\n 1.Enqueue \n 2.Dequeue \n 3.Show ");
        printf("\n Enter your choice= ");
        scanf("%d",&choice);
        
        switch(choice)
        {
            case 1:
            enqueue();
            break;
            case 2:
            dequeue();
            break;
            case 3:
            show();
            break;
            default:
            printf("\nWrong Choice...Please enter a valid choice");
        }
        printf("\n If you want to continue press 1= ");
        scanf("%d",&choice);
    }while(choice==1);
}

void enqueue()
{
    int element;
    if(front==-1 && rear==-1)
    {
        front=rear=0;
        printf("\n Enter the element you want to enqueue= ");
        scanf("%d",&element);
        cirQueue[rear]=element;
        printf("\nFirst element is inserted successfully...!");
    }
    else if(((rear+1)%10)==front)
    {
        printf("Queue is Full...Insertion is not possible!");
    }
    else
    {
        printf("\n Enter the element you want to enqueue= ");
        scanf("%d",&element);
        rear=(rear+1)%10;
        cirQueue[rear]=element;
        printf("\n Element is inserted successfully...!");
    }
}

void dequeue()
{
    if(front==-1 && rear==-1)
    {
        printf("Queue is Empty...Deletion is not possible!");
    }
    else if(front==rear)
    {
        front=rear=-1;
        printf("\n Element is Deleted successfully...!");
    }
    else
    {
        front=(front+1)%10;
        printf("\n Element is Deleted successfully...!");
    }
}

void show()
{
    if(front==-1 && rear==-1)
    {
        printf("\nQueue is empty...!");
    }
    else
    {
        printf("\nElements in the Queue= \t");
        for(i=front;i!=rear;i=(i+1)%10)
        {
            printf(" %d ",cirQueue[i]);
        }
        printf(" %d ",cirQueue[rear]);
    }
    
}
